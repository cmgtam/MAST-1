#!/usr/bin/env python

import sys, os

from MAST.utility.defect_formation_energy import DefectFormationEnergy
from MAST.utility.defect_formation_energy import GapPlot
from MAST.utility import Metadata


def main():
    archive = os.path.expandvars(os.environ['MAST_ARCHIVE'])

    dir_list = os.listdir(archive)
    print 'Found %i completed jobs in %s:\n' % (len(dir_list), archive)

    for ndir, directory in enumerate(dir_list):
        metafile = Metadata(metafile='%s/%s/metadata.txt' % (archive, directory))
        system = metafile.read_data('system name')
        date = metafile.read_data('directory created')

        print '%i) %s ran on %s' % (ndir, system, date)

    print '\nPlease select a run from the above list to calculate the defect formation energies for:'
    index = int(sys.stdin.readline())
    #print 'Index selected:', index

    directory = dir_list[index]
    metafile = Metadata(metafile='%s/%s/metadata.txt' % (archive, directory))
    system = metafile.read_data('system name')
    date = metafile.read_data('directory created')

    print 'You have selected %s ran on %s.' % (system, date)
    print 'Calculating defect formation energies now.'

    directory_path = '%s/%s/' % (archive, directory)
    DFE = DefectFormationEnergy(directory=directory_path)
    #defect_energies = DFE.calculate_defect_formation_energies()
    DFE.print_table()

    print 'Do you wish to plot the band gap energy levels ([y]es/[n]o)?'
    response = sys.stdin.readline().lower()

    if 'y' in response:
        print 'Before plotting the levels, please specify a band gap:'
        bandgap = float(sys.stdin.readline())
        print 'Procedding with a band gap of %.2f eV' % bandgap
        gp = GapPlot(gap=bandgap, dfe=DFE.defect_formation_energies)
        gp.plot_levels()
    elif 'n' in response:
        print 'Not plotting'
    else:
        print 'Response not recognized, not plotting levels.'

    print 'Finished analyzing %s ran on %s.' % (system, date)
    print 'Have a nice day.'

if __name__ == '__main__':
    main()
